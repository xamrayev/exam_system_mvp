# Generated by Django 5.2.6 on 2025-09-13 08:00

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название курса')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_md', models.TextField(verbose_name='Текст вопроса (Markdown)')),
                ('text', models.TextField(blank=True, verbose_name='Текст вопроса (обычный)')),
                ('difficulty', models.CharField(choices=[('easy', 'Легкий'), ('medium', 'Средний'), ('hard', 'Сложный')], default='medium', max_length=10)),
                ('question_type', models.CharField(choices=[('single_choice', 'Один правильный ответ'), ('multiple_choice', 'Несколько правильных ответов'), ('open', 'Открытый ответ'), ('text', 'Текстовый ответ')], default='single_choice', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True, verbose_name='ID студента')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('group', models.CharField(blank=True, max_length=50, verbose_name='Группа')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='StudentImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_file', models.FileField(upload_to='imports/students/', verbose_name='Файл Excel')),
                ('imported_at', models.DateTimeField(auto_now_add=True)),
                ('imported_by', models.CharField(max_length=100, verbose_name='Импортировал')),
                ('students_count', models.IntegerField(default=0, verbose_name='Количество студентов')),
                ('success', models.BooleanField(default=False, verbose_name='Успешно')),
                ('error_message', models.TextField(blank=True, verbose_name='Сообщение об ошибке')),
            ],
            options={
                'verbose_name': 'Импорт студентов',
                'verbose_name_plural': 'Импорты студентов',
                'ordering': ['-imported_at'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название экзамена')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('open_time', models.DateTimeField(verbose_name='Время открытия')),
                ('close_time', models.DateTimeField(verbose_name='Время закрытия')),
                ('duration_minutes', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(300)], verbose_name='Продолжительность (минуты)')),
                ('attempts_allowed', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Количество попыток')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='exams.course')),
            ],
            options={
                'verbose_name': 'Экзамен',
                'verbose_name_plural': 'Экзамены',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_md', models.TextField(verbose_name='Текст ответа (Markdown)')),
                ('text', models.TextField(blank=True, verbose_name='Текст ответа (обычный)')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Правильный ответ')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='exams.question')),
            ],
            options={
                'verbose_name': 'Вариант ответа',
                'verbose_name_plural': 'Варианты ответов',
            },
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('in_progress', 'В процессе'), ('finished', 'Завершен'), ('time_expired', 'Время вышло')], default='in_progress', max_length=20)),
                ('score', models.FloatField(default=0)),
                ('max_score', models.FloatField(default=0)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='exams.exam')),
                ('questions', models.ManyToManyField(blank=True, related_name='exam_results', to='exams.question')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to='exams.student')),
            ],
            options={
                'verbose_name': 'Результат экзамена',
                'verbose_name_plural': 'Результаты экзаменов',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название предмета')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='exams.course')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exams.subject'),
        ),
        migrations.CreateModel(
            name='CourseStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.student')),
            ],
            options={
                'verbose_name': 'Студент курса',
                'verbose_name_plural': 'Студенты курсов',
                'unique_together': {('course', 'student')},
            },
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('points_earned', models.IntegerField(default=0)),
                ('answered_at', models.DateTimeField(auto_now=True)),
                ('exam_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='exams.examresult')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.question')),
                ('selected_answers', models.ManyToManyField(blank=True, to='exams.answer')),
            ],
            options={
                'verbose_name': 'Ответ студента',
                'verbose_name_plural': 'Ответы студентов',
                'unique_together': {('exam_result', 'question')},
            },
        ),
        migrations.CreateModel(
            name='ExamSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('easy_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('medium_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('hard_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('easy_points', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('medium_points', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(0)])),
                ('hard_points', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(0)])),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_subjects', to='exams.exam')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exams.subject')),
            ],
            options={
                'verbose_name': 'Предмет экзамена',
                'verbose_name_plural': 'Предметы экзамена',
                'unique_together': {('exam', 'subject')},
            },
        ),
    ]
